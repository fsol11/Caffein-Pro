<Application x:Class="Caffeine_Pro.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             ShutdownMode="OnExplicitShutdown"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:local="clr-namespace:Caffeine_Pro"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns:converters1="clr-namespace:Caffeine_Pro.Converters"
             xmlns:controls="clr-namespace:Caffeine_Pro.Controls">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary/>
                <ui:ControlsDictionary/>
                <ResourceDictionary Source="Icons.xaml"/>

            </ResourceDictionary.MergedDictionaries>

            <converters1:InvertableBooleanToVisibilityConverter x:Key="BoolToVis"/>
            <converters1:EnumToDescriptionConverter x:Key="EnumToDescription"/>
            <converters1:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
            <converters1:DateToEnabledConverter x:Key="DateToEnabled"/>
            <converters1:MinutesToTimeStringConverter x:Key="MinutesToTimeString"/>
            <converters1:DoubleToIntConverter x:Key="DoubleToInt"/>
            <converters1:ValueEqualsParameterConverter x:Key="ValueEqualsParameter"/>
            <converters1:ValueNotEqualsParameterConverter x:Key="ValueNotEqualsParameter"/>
            <converters1:ValueNotEqualsParameterToVisibilityConverter x:Key="ValueNotEqualsParameterToVisibility"/>
            <converters1:NotConverter x:Key="Not" />

            <Style x:Key="NoHighlightMenuItemStyle" TargetType="{x:Type MenuItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="Border" Background="{TemplateBinding Background}">
                                <ContentPresenter ContentSource="Header" Margin="10,2"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <ContextMenu x:Key="TrayContextMenu" DataContext="{Binding Source={x:Static local:App.CurrentApp}}">

                <MenuItem Style="{StaticResource NoHighlightMenuItemStyle}" StaysOpenOnClick="True" HorizontalContentAlignment="Center">
                    <MenuItem.Header>
                        <Border Padding="10 ">
                            <controls:StatusControl Awakeness="{Binding Source={x:Static local:App.CurrentApp}, Path=KeepAwakeService.Awakeness}" />
                        </Border>
                    </MenuItem.Header>
                </MenuItem>
                <Separator/>
                <MenuItem Style="{StaticResource NoHighlightMenuItemStyle}" StaysOpenOnClick="True">
                    <MenuItem.Header>
                        <StackPanel Orientation="Vertical">
                            <controls:AwakenessControl RelativeTimeDisabled="True" AwakenessValue="{Binding Source={x:Static local:App.CurrentApp}, Path=KeepAwakeService.Awakeness}" Padding="0 5 0 0"/>
                        </StackPanel>
                    </MenuItem.Header>
                </MenuItem>
                <Separator/>

                <MenuItem Header="Settings">
                    <MenuItem.Items>
                        <MenuItem Header="Start With Windows" IsCheckable="True"
                                  IsChecked="{Binding Mode=TwoWay, Source={x:Static local:App.CurrentApp}, Path=AppSettings.StartWithWindows}"
                                  StaysOpenOnClick="True"/>
                        <MenuItem Header="No Icon" IsCheckable="True"
                                  IsChecked="{Binding Mode=TwoWay, Source={x:Static local:App.CurrentApp}, Path=AppSettings.NoIcon}"
                                  StaysOpenOnClick="True" Click="NoIconBtn"/>
                        <Separator/>
                        <MenuItem Style="{StaticResource NoHighlightMenuItemStyle}" 
                                  StaysOpenOnClick="True">
                            <MenuItem.Header>
                                <controls:StartupOptionsControl/>
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem.Items>
                </MenuItem>
                <Separator/>

                <MenuItem Header="Send Feedback" Click="OnSendFeedback"/>
                <MenuItem Header="About" Click="OnAboutMenu"/>
                <MenuItem Header="Exit" Click="OnExitMenu"/>
            </ContextMenu>

            <BitmapImage x:Key="InactiveIcon" UriSource="/Resources/Coffee.ico"/>
            <BitmapImage x:Key="ActiveIcon" UriSource="/Resources/CoffeeDot.ico"/>

            <tb:TaskbarIcon
                    x:Key="TrayIcon"
                    MenuActivation="LeftOrRightClick"
                    DataContext=""
                    ToolTipText="{Binding Source={x:Static local:App.CurrentApp}, Path=KeepAwakeService.StatusText}"
                    Visibility="{Binding Source={x:Static local:App.CurrentApp}, Path=AppSettings.NoIcon, Converter={StaticResource BoolToVis}, ConverterParameter=Inverted}"
                    ContextMenu="{StaticResource TrayContextMenu}"/>

        </ResourceDictionary>
    </Application.Resources>
</Application>
