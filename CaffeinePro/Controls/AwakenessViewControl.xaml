<UserControl x:Class="CaffeinePro.Controls.AwakenessViewControl"
             xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converters1="clr-namespace:CaffeinePro.Converters"
             xmlns:controls="clr-namespace:CaffeinePro.Controls"
             xmlns:services="clr-namespace:CaffeinePro.Services"
             xmlns:classes="clr-namespace:CaffeinePro.Classes"
             DataContext="{Binding RelativeSource={RelativeSource Self}}"
             MinWidth="50"
             mc:Ignorable="d" Padding="0 0 0 0">
    <UserControl.Resources>
        <converters1:EnumToDescriptionConverter x:Key="EnumToDescription" />
        <converters1:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />

    </UserControl.Resources>

    <Border CornerRadius="4" Padding="5 2" Background="Transparent" BorderThickness="1"
            BorderBrush="{DynamicResource TextControlElevationBorderBrush}">
        <StackPanel>
            <StackPanel Orientation="Horizontal">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" x:Name="RelativeTimePanel">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding AwakenessValue.AwakenessType}"
                                                       Value="{x:Static classes:Awakeness+AwakenessTypes.Relative}" />
                                            <Condition Binding="{Binding InStartupOptions}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <TextBlock Width="75" Text="For |" VerticalAlignment="Center" HorizontalAlignment="Left"
                                   TextAlignment="Right" />
                        <Border CornerRadius="4" Margin="4 2" Padding="8 1" Width="150">
                            <StackPanel Orientation="Horizontal">

                                <TextBlock VerticalAlignment="Center" TextAlignment="Left">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}h : {1}m">
                                            <Binding Path="AwakenessValue.RelativeSpan.Hours" />
                                            <Binding Path="AwakenessValue.RelativeSpan.Minutes" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock Text=" " />
                            </StackPanel>
                        </Border>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding AwakenessValue.IsRelative}" Value="True" />
                                            <Condition Binding="{Binding InStartupOptions}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>

                        <TextBlock Width="75" Text="Until |"
                                   VerticalAlignment="Center" HorizontalAlignment="Left"
                                   TextAlignment="Right" />

                        <Border CornerRadius="4" Margin="4 2" Padding="8 1" Width="150">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding AwakenessValue.EndDateText}"
                                           Margin="0 0 8 0"
                                           Visibility="{Binding ShouldShowDate, Converter={StaticResource BoolToVis}}" />
                                <TextBlock Text="{Binding AwakenessValue.EndTimeText}"
                                           Visibility="{Binding AwakenessValue.IsIndefinite, Converter={StaticResource BoolToVis}, ConverterParameter=Inverted}" />
                            </StackPanel>
                        </Border>

                    </StackPanel>
                </StackPanel>
                <ui:DropDownButton Background="Transparent"
                                   Padding="5 0"
                                   BorderBrush="Transparent"
                                   ToolTip="Config"
                                   VerticalAlignment="Top">
                    <ui:DropDownButton.Icon>
                        <ui:SymbolIcon Symbol="Settings48" Height="24" Filled="True" FontSize="24" />
                    </ui:DropDownButton.Icon>
                    <ui:DropDownButton.Flyout>

                        <ContextMenu>
                            <MenuItem Header="Indefinitely" Click="MenuItemIndefinitely_OnClick" Tag="{x:Null}" />
                            <MenuItem Header="Until">
                                <MenuItem.Items>
                                    <MenuItem Style="{StaticResource NoHighlightMenuItemStyle}">
                                        <MenuItem.Header>
                                            <controls:TimePickerControl 
                                                NewTimeSelected="OnNewTimeSelected" 
                                                InStartupOptions="{Binding InStartupOptions}"/>
                                        </MenuItem.Header>
                                    </MenuItem>
                                </MenuItem.Items>
                            </MenuItem>
                            <MenuItem Header="For">
                                <MenuItem.Items>
                                    <MenuItem Style="{StaticResource NoHighlightMenuItemStyle}" StaysOpenOnClick="True">
                                        <MenuItem.Header>
                                            <StackPanel HorizontalAlignment="Center">
                                                <controls:TimeSliderControl
                                                    Width="150"
                                                    x:Name="RelativeTimeSlider" />
                                                <Button HorizontalAlignment="Center"
                                                        Content="Apply"
                                                        Click="RelativeTimeApplyButton_OnClick" />
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </MenuItem>
                                </MenuItem.Items>
                            </MenuItem>

                            <MenuItem Header="Afterwards">
                                <MenuItem StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <RadioButton GroupName="Afterwards"
                                                     IsChecked="{Binding AwakenessValue.AfterwardsAction, ConverterParameter={x:Static services:SessionAction.None}, Converter={StaticResource EnumToBooleanConverter}, Mode=OneWay}"
                                                     Click="AfterwardsAction_Click"
                                                     Tag="{x:Static services:SessionAction.None}"
                                                     Content="Do Nothing" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem Style="{StaticResource NoHighlightMenuItemStyle}" StaysOpenOnClick="True"
                                          Header="Program:" />
                                <MenuItem StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <RadioButton GroupName="Afterwards"
                                                     IsChecked="{Binding AwakenessValue.AfterwardsAction, ConverterParameter={x:Static services:SessionAction.Exit}, Converter={StaticResource EnumToBooleanConverter}, Mode=OneWay}"
                                                     Click="AfterwardsAction_Click"
                                                     Tag="{x:Static services:SessionAction.Exit}"
                                                     Content="Exit" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem Style="{StaticResource NoHighlightMenuItemStyle}" StaysOpenOnClick="True"
                                          Header="Session:" />
                                <MenuItem StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <RadioButton GroupName="Afterwards"
                                                     IsChecked="{Binding AwakenessValue.AfterwardsAction, ConverterParameter={x:Static services:SessionAction.Lock}, Converter={StaticResource EnumToBooleanConverter}, Mode=OneWay}"
                                                     Click="AfterwardsAction_Click"
                                                     Tag="{x:Static services:SessionAction.Lock}"
                                                     Content="Lock" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <RadioButton GroupName="Afterwards"
                                                     IsChecked="{Binding AwakenessValue.AfterwardsAction, ConverterParameter={x:Static services:SessionAction.SignOut}, Converter={StaticResource EnumToBooleanConverter}, Mode=OneWay}"
                                                     Click="AfterwardsAction_Click"
                                                     Tag="{x:Static services:SessionAction.SignOut}"
                                                     Content="Sign Out" />
                                    </MenuItem.Header>
                                </MenuItem>

                                <MenuItem StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <RadioButton GroupName="Afterwards"
                                                     IsChecked="{Binding AwakenessValue.AfterwardsAction, ConverterParameter={x:Static services:SessionAction.Sleep}, Converter={StaticResource EnumToBooleanConverter}, Mode=OneWay}"
                                                     Click="AfterwardsAction_Click"
                                                     Tag="{x:Static services:SessionAction.Sleep}"
                                                     Content="Sleep" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem Style="{StaticResource NoHighlightMenuItemStyle}" StaysOpenOnClick="True"
                                          Header="System:" />
                                <MenuItem StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <RadioButton GroupName="Afterwards"
                                                     IsChecked="{Binding AwakenessValue.AfterwardsAction, ConverterParameter={x:Static services:SessionAction.Hibernate}, Converter={StaticResource EnumToBooleanConverter}, Mode=OneWay}"
                                                     Click="AfterwardsAction_Click"
                                                     Tag="{x:Static services:SessionAction.Hibernate}"
                                                     Content="Hibernate" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <RadioButton GroupName="Afterwards"
                                                     IsChecked="{Binding AwakenessValue.AfterwardsAction, ConverterParameter={x:Static services:SessionAction.Shutdown}, Converter={StaticResource EnumToBooleanConverter}, Mode=OneWay}"
                                                     Click="AfterwardsAction_Click"
                                                     Tag="{x:Static services:SessionAction.Shutdown}"
                                                     Content="Shutdown" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <RadioButton GroupName="Afterwards"
                                                     IsChecked="{Binding AwakenessValue.AfterwardsAction, ConverterParameter={x:Static services:SessionAction.ForceShutdown}, Converter={StaticResource EnumToBooleanConverter}, Mode=OneWay}"
                                                     Click="AfterwardsAction_Click"
                                                     Tag="{x:Static services:SessionAction.ForceShutdown}"
                                                     Content="Force Shutdown" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <RadioButton GroupName="Afterwards"
                                                     IsChecked="{Binding AwakenessValue.AfterwardsAction, ConverterParameter={x:Static services:SessionAction.Restart}, Converter={StaticResource EnumToBooleanConverter}, Mode=OneWay}"
                                                     Click="AfterwardsAction_Click"
                                                     Tag="{x:Static services:SessionAction.Restart}"
                                                     Content="Restart" />
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <RadioButton GroupName="Afterwards"
                                                     IsChecked="{Binding AwakenessValue.AfterwardsAction, ConverterParameter={x:Static services:SessionAction.ForceRestart}, Converter={StaticResource EnumToBooleanConverter}, Mode=OneWay}"
                                                     Click="AfterwardsAction_Click"
                                                     Tag="{x:Static services:SessionAction.ForceRestart}"
                                                     Content="Force Restart" />
                                    </MenuItem.Header>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Header="Options">
                                <MenuItem IsCheckable="True"
                                          IsChecked="{Binding AwakenessValue.Options.AllowScreenSaver, Mode=OneWay}"
                                          Click="ToggleAwakenessOptionMenu_Click"
                                          Tag="AllowScreenSaver"
                                          StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <TextBlock>
                                            <Run Text="Allow Screen Saver " />
                                            <Run FontSize="10" Text="(Doesn't prevent inactivity detection)"></Run>
                                        </TextBlock>
                                    </MenuItem.Header>
                                </MenuItem>
                                <MenuItem Header="Inactive When Locked" IsCheckable="True"
                                          IsChecked="{Binding AwakenessValue.Options.InactiveWhenLocked, Mode=OneWay}"
                                          Click="ToggleAwakenessOptionMenu_Click"
                                          Tag="InactiveWhenLocked"
                                          StaysOpenOnClick="True" />
                                <MenuItem Header="Inactive When On Battery" IsCheckable="True"
                                          IsChecked="{Binding  AwakenessValue.Options.InactiveWhenOnBattery, Mode=OneWay}"
                                          Click="ToggleAwakenessOptionMenu_Click"
                                          Tag="InactiveWhenOnBattery"
                                          StaysOpenOnClick="True" />
                                <MenuItem IsCheckable="True"
                                          IsChecked="{Binding AwakenessValue.Options.InactiveWhenCpuBelowPercentage, Mode=OneWay}"
                                          Click="ToggleAwakenessOptionMenu_Click"
                                          Tag="InactiveWhenCpuBelowPercentage"
                                          StaysOpenOnClick="True">
                                    <MenuItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock>Inactive When CPU Below</TextBlock>
                                            <controls:NumericTextBox MaxLength="2" Width="50" Margin="5,0,0,0"
                                                                     Text="{Binding AwakenessValue.Options.CpuBelowPercentage, Mode=OneWay}"
                                                                     KeyUp="CpuPercentageChanged" />
                                            <TextBlock>%</TextBlock>
                                        </StackPanel>
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator />
                                <MenuItem StaysOpenOnClick="True" Header="Reset Options" Click="ResetOptions" />
                            </MenuItem>
                        </ContextMenu>
                    </ui:DropDownButton.Flyout>
                </ui:DropDownButton>
            </StackPanel>


            <StackPanel
                ToolTip="Afterward action to be taken when the timer expires."
                Orientation="Horizontal"
                HorizontalAlignment="Left"
                Height="20"
                Visibility="{Binding AwakenessValue.AfterwardsAction, Converter={StaticResource ValueNotEqualsParameterToVisibility}, ConverterParameter={x:Static services:SessionAction.None}, Mode=OneWay}">
                <TextBlock Text="Afterward |" Width="75"
                           VerticalAlignment="Center" HorizontalAlignment="Right"
                           TextAlignment="Right" />

                <Border CornerRadius="4 " Margin="4 2 0 0" Padding="8 0" Background="Transparent"
                        BorderBrush="Transparent">
                    <TextBlock
                        Text="{Binding AwakenessValue.AfterwardsAction, Converter={StaticResource EnumToDescription}, Mode=OneWay}" />
                </Border>
            </StackPanel>

            <StackPanel Visibility="{Binding AwakenessValue.Options.AnyOptionsSet, Converter={StaticResource BoolToVis}, Mode=OneWay}">
                <ui:NavigationViewItemSeparator />

                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Left">
                    <TextBlock Text="Options |" Width="75"
                               VerticalAlignment="Center" HorizontalAlignment="Right"
                               TextAlignment="Right" />

                    <Border CornerRadius="4 " Margin="4 2 0 0" Padding="8 0" Background="Transparent"
                            BorderBrush="Transparent">
                        <StackPanel Orientation="Horizontal">
                            <Image
                                ToolTip="Allow screen saver (prevents sleep but would not emulate keypress)"
                                Width="25" Height="25"
                                Visibility="{Binding AwakenessValue.Options.AllowScreenSaver, Converter={StaticResource BoolToVis}, Mode=OneWay}"
                                Margin="8 0 0 0" Source="{StaticResource AllowScreenSaverIcon}" />
                            <Image
                                ToolTip="Inactive when on battery"
                                Width="25" Height="25"
                                Visibility="{Binding AwakenessValue.Options.InactiveWhenOnBattery, Converter={StaticResource BoolToVis}, Mode=OneWay}"
                                Margin="8 0 0 0" Source="{StaticResource CancelOnBatteryIcon}" />
                            <Image
                                ToolTip="Inactive when locked"
                                Width="25" Height="25"
                                Visibility="{Binding AwakenessValue.Options.InactiveWhenLocked, Converter={StaticResource BoolToVis}, Mode=OneWay}"
                                Margin="8 0 0 0" Source="{StaticResource CancelOnLockIcon}" />
                            <StackPanel
                                ToolTip="Inactive when CPU below percentage"
                                Visibility="{Binding AwakenessValue.Options.InactiveWhenCpuBelowPercentage, Converter={StaticResource BoolToVis}, Mode=OneWay}"
                                Orientation="Horizontal">
                                <Image
                                    Width="25" Height="25"
                                    Margin="8 0 0 0" Source="{StaticResource CancelOnCpuIcon}" />
                                <TextBlock>
                                    <Run Text="&lt;" />
                                    <Run Text="{Binding AwakenessValue.Options.CpuBelowPercentage, Mode=OneWay}" />
                                    <Run Text="%" />
                                </TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </StackPanel>

        </StackPanel>
    </Border>

</UserControl>